<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>numpy.dot()函数</title>
      <link href="/2018/09/11/numpy-dot-%E5%87%BD%E6%95%B0/"/>
      <url>/2018/09/11/numpy-dot-%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h1><p>　　numpy(Numerical Python extensions)是一个第三方的Python包，用于科学计算。本文主要讲学习Numpy过程中遇到的一个问题，关于numpy.dot()是怎运算的。<a id="more"></a></p><h2 id="Numpy中多维数组的轴"><a href="#Numpy中多维数组的轴" class="headerlink" title="Numpy中多维数组的轴"></a>Numpy中多维数组的轴</h2><p>　　多维数组可以用numpy包生成，关于多维数组的运算以及定义等自行百度,主要讲多维数组的轴,这也是我学习时不懂的地方。</p><div class="note default"><p>　　多维数组的轴(axis)和该数组的size(或者)shape元素对应 。轴数从0开始，如果是二维，０轴是竖行，１轴是横行。具体看代码</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">x = np.random.randint(<span class="number">0</span>,<span class="number">5</span>,[<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>])</span><br><span class="line">print(x)</span><br><span class="line">Out:</span><br><span class="line">  [[[<span class="number">5</span> <span class="number">2</span>]</span><br><span class="line">    [<span class="number">4</span> <span class="number">2</span>]]</span><br><span class="line"></span><br><span class="line">   [[<span class="number">1</span> <span class="number">3</span>]</span><br><span class="line">    [<span class="number">2</span> <span class="number">3</span>]]</span><br><span class="line"></span><br><span class="line">   [[<span class="number">1</span> <span class="number">1</span>]</span><br><span class="line">    [<span class="number">0</span> <span class="number">1</span>]]]</span><br><span class="line"></span><br><span class="line">x.sum(axis=<span class="number">0</span>)</span><br><span class="line">Out:</span><br><span class="line">  array([[<span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">        [<span class="number">6</span>, <span class="number">6</span>]])</span><br><span class="line"></span><br><span class="line">x.sum(axis=<span class="number">1</span>)</span><br><span class="line">Out:</span><br><span class="line">  array([[<span class="number">9</span>, <span class="number">4</span>],</span><br><span class="line">         [<span class="number">3</span>, <span class="number">6</span>],</span><br><span class="line">         [<span class="number">1</span>, <span class="number">2</span>]])</span><br><span class="line"></span><br><span class="line">x.sum(axis=<span class="number">2</span>)</span><br><span class="line">Out:</span><br><span class="line">  array([[<span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">1</span>]])</span><br></pre></td></tr></table></figure><div class="note info"><p>　　如果将三维数组的每一个二维看做一个平面（plane，X[0, :, :], X[1, :, :], X[2, :, :]），三维数组即是这些二维平面层叠（stacked）出来的结果。则（axis=0）表示全部平面上的对应位置，（axis=1），每一个平面的每一列，（axis=2），每一个平面的每一行。</p></div><h1 id="numpy-dot"><a href="#numpy-dot" class="headerlink" title="numpy.dot()"></a>numpy.dot()</h1><p>　　<em>numpy.dot(a,b,out=None)</em></p><ul><li>如果a和b都是一维数组，则进行内积运算</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">np.dot(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">Out:</span><br><span class="line">  <span class="number">12</span></span><br><span class="line"></span><br><span class="line">np.dot([<span class="number">2j</span>, <span class="number">3</span>+<span class="number">3j</span>], [<span class="number">2j</span>, <span class="number">3j</span>])</span><br><span class="line">Out:</span><br><span class="line">  (<span class="number">-13</span>+<span class="number">9j</span>)</span><br></pre></td></tr></table></figure><ul><li>如果都是二维数组，就进行矩阵乘法，推荐<code>a@b</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">b = [[<span class="number">4</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>]]</span><br><span class="line">np.dot(a, b)</span><br><span class="line">Out:</span><br><span class="line">  array([[<span class="number">4</span>, <span class="number">1</span>],</span><br><span class="line">         [<span class="number">2</span>, <span class="number">2</span>]])</span><br></pre></td></tr></table></figure><ul><li>如果其中一个矩阵０秩，即标量，就进行<code>a*b</code>的运算，相乘</li><li>如果a是N-D矩阵且b是1-D矩阵,就进行a的最后一个轴上的数据和b相乘并求和</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a = array([[[ <span class="number">1.</span>,  <span class="number">2.</span>,  <span class="number">3.</span>,  <span class="number">4.</span>],</span><br><span class="line">     [ <span class="number">5.</span>,  <span class="number">6.</span>,  <span class="number">7.</span>,  <span class="number">8.</span>],</span><br><span class="line">     [ <span class="number">9.</span>, <span class="number">10.</span>, <span class="number">11.</span>, <span class="number">12.</span>]],</span><br><span class="line"></span><br><span class="line">    [[ <span class="number">1.</span>,  <span class="number">2.</span>,  <span class="number">3.</span>,  <span class="number">4.</span>],</span><br><span class="line">     [ <span class="number">5.</span>,  <span class="number">6.</span>,  <span class="number">7.</span>,  <span class="number">8.</span>],</span><br><span class="line">     [ <span class="number">9.</span>, <span class="number">10.</span>, <span class="number">11.</span>, <span class="number">12.</span>]]])</span><br><span class="line">b = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">np.dot(a, b)</span><br><span class="line">Out:</span><br><span class="line">  array([[ <span class="number">30.</span>,  <span class="number">70.</span>, <span class="number">110.</span>],</span><br><span class="line">       [ <span class="number">30.</span>,  <span class="number">70.</span>, <span class="number">110.</span>]])</span><br></pre></td></tr></table></figure><ul><li>如果都是多维矩阵，则_a的最后一个轴和b的倒数第二个轴上的数据乘积累加_,类似第四种情况<br><code>dot(a, b)[i,j,k,m] = sum(a[i,j,:] * b[k,:,m])</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">3</span>*<span class="number">4</span>*<span class="number">5</span>*<span class="number">6</span>).reshape((<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>))</span><br><span class="line">b = np.arange(<span class="number">3</span>*<span class="number">4</span>*<span class="number">5</span>*<span class="number">6</span>)[::<span class="number">-1</span>].reshape((<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">3</span>))</span><br><span class="line">np.dot(a, b)[<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line">Out:</span><br><span class="line">  <span class="number">499128</span></span><br><span class="line">sum(a[<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,:] * b[<span class="number">1</span>,<span class="number">2</span>,:,<span class="number">2</span>])</span><br><span class="line">Out:</span><br><span class="line">  <span class="number">499128</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;</p>]]></content>
      
      <categories>
          
          <category> MachineLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MachineLearning </tag>
            
            <tag> Numpy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>聚类和K-Means算法</title>
      <link href="/2018/09/10/%E8%81%9A%E7%B1%BB%E5%92%8CK-Means%E7%AE%97%E6%B3%95/"/>
      <url>/2018/09/10/%E8%81%9A%E7%B1%BB%E5%92%8CK-Means%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><meta name="referrer" content="no-referrer"></p><h1 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h1><p>　　聚类(Clustering)，指的是一种学习方式（操作方式），即把物理或者抽象对象的集合分组为由彼此的对象组成的多个类的分析过程。<a id="more"></a><br><div class="note info"><p>聚类属于无监督机器学习，简言之就是把特征形态相同的或者近似的划分在一个概念下，聚集为一组。</p></div></p><h2 id="欧氏距离"><a href="#欧氏距离" class="headerlink" title="欧氏距离"></a>欧氏距离</h2><p>　　欧氏距离是最直观的距离度量方法，通常就是学过的两点间距离，可以用在多维。</p><ul><li>二维平面上点a(x1,y1)与b(x2,y2)间的欧氏距离:  <script type="math/tex; mode=display">d_{12} = \sqrt{(x_1-x_2)^2+(y_1-y_2)^2}</script></li><li>三维空间点a(x1,y1,z1)与b(x2,y2,z2)间的欧氏距离:<script type="math/tex; mode=display">d{12} = \sqrt{(x_1-x_2)^2+(y_1-y_2)^2+(z_1-z_2)^2}</script></li><li>更高维的计算类似二维三维</li></ul><h2 id="曼哈顿距离"><a href="#曼哈顿距离" class="headerlink" title="曼哈顿距离"></a>曼哈顿距离</h2><p>　　不再是两点间连线的那种，是类似九宫格的走法，只能直线和直角拐弯。又叫做“城市街区距离”。</p><ul><li>二维平面两点a(x1,y1)与b(x2,y2)间的曼哈顿距离：<br>$$ d_12 = |</li></ul>]]></content>
      
      <categories>
          
          <category> MachineLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K-Means </tag>
            
            <tag> Learning </tag>
            
            <tag> Python </tag>
            
            <tag> MachineLearning </tag>
            
            <tag> Clustering </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/05/hello-world/"/>
      <url>/2018/09/05/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
